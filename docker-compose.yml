version: '3.8'

services:
  prod:
    build:
      context: .
      target: prod
    volumes:
      - static_files:/usr/src/clist/staticfiles/
      - media_files:/usr/src/clist/mediafiles/
      - shared_files:/usr/src/clist/sharedfiles/
      - ./logs/production:/usr/src/clist/logs/
      - ./legacy/logs/:/usr/src/clist/logs/legacy/
    depends_on:
      - db
      - memcached
    secrets:
      - db_conf
      - sentry_conf
    restart: unless-stopped
  dev:
    build:
      context: .
      target: dev
    volumes:
      - ./src/:/usr/src/clist/
      - ./legacy/api/:/usr/src/clist/legacy/api/
      - ./src/static:/usr/src/clist/staticfiles/
      - media_files:/usr/src/clist/mediafiles/
      - shared_files:/usr/src/clist/sharedfiles/
      - ./logs/development:/usr/src/clist/logs/
      - ./legacy/logs/:/usr/src/clist/logs/legacy/
    depends_on:
      - db
    secrets:
      - db_conf
      - sentry_conf
    ports:
      - ${CLIST_DEV_PORT:-10042}:10042
    restart: unless-stopped
  memcached:
    image: memcached
    restart: unless-stopped
  legacy:
    build: ./legacy
    volumes:
      - ./legacy:/usr/src/legacy/
    depends_on:
      - db
    secrets:
      - db_conf
      - sentry_conf
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4:latest
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - ./.env.db
    depends_on:
      - db
    restart: unless-stopped
  db:
    image: postgres:14.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    command: >
      postgres
      -c max_connections=50
      -c checkpoint_timeout=60min
      -c track_activity_query_size=4096
      -c shared_buffers=1GB
      -c effective_cache_size=3GB
      -c work_mem=64MB
      -c maintenance_work_mem=500MB
    shm_size: 4GB
    ports:
      - ${CLIST_DB_PORT:-5432}:5432
    restart: unless-stopped
  nginx:
    build:
      context: .
      target: nginx
    volumes:
      - static_files:/staticfiles/
      - media_files:/mediafiles/
      - ./legacy:/usr/src/legacy/
      - ./config/nginx/conf.d:/etc/nginx/conf.d/
      - certbot_www:/var/www/certbot/
      - certbot_conf:/etc/letsencrypt/
      - ./logs/nginx:/var/log/nginx/
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do logrotate /etc/logrotate.conf; sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./logs/letsencrypt:/var/log/letsencrypt
      - certbot_www:/var/www/certbot/
      - certbot_conf:/etc/letsencrypt/
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 1d & wait $${!}; done;'"
    restart: unless-stopped
  loggly:
    build:
      context: .
      target: loggly
    volumes:
      - ./logs/:/logs/
    secrets:
      - loggly_token
    restart: unless-stopped
  netdata:
    image: netdata/netdata:latest
    hostname: netdata.clist.by
    pid: host
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdata_config:/etc/netdata
      - netdata_lib:/var/lib/netdata
      - netdata_cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - ./.env.netdata
    restart: unless-stopped

secrets:
  db_conf:
    file: ./.env.db
  sentry_conf:
    file: ./.env.sentry
  loggly_token:
    file: ./config/loggly/.env.token

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/postgres_data
  pgadmin_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/pgadmin
  static_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/static_files
  media_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/media_files
  certbot_www:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/certbot_www
  certbot_conf:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/certbot_conf
  netdata_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/netdata/config
  netdata_lib:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/netdata/lib
  netdata_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/netdata/cache
  shared_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/shared_files
